# -*- coding: utf-8 -*-
"""datacleaning_titanic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O7uIjt_6O4YeUiq6JgW4-0V1B-txd9qR
"""

import pandas as pd
import numpy as np
from pandas import Series,DataFrame
import matplotlib.pyplot as plt
import seaborn as sns

titanic_df= pd.read_csv('/train.csv')

titanic_df.head()

titanic_df.info()

sns.heatmap(titanic_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')

titanic_df.describe()

sns.countplot(x='Survived',data=titanic_df)

"""1 survive and 0 not servived"""

sns.countplot(x='Sex',data=titanic_df)

"""male around 600 and female 300"""

sns.countplot(x='Survived',hue='Sex',data=titanic_df)

"""female and child servived are more"""

sns.countplot(x='Pclass',data=titanic_df)

sns.catplot(x='Survived',data=titanic_df,hue='Pclass',kind='count')

"""3 rd  lower servival"""

sns.catplot(x='Sex',data=titanic_df,hue='Pclass',kind='count')

"""female or childern where given prefrences"""

titanic_df['Age'].hist(bins=80)

"""how many younger and older where their in the ship ,young people where in the ship"""

sns.catplot(x='Survived',data=titanic_df,hue='SibSp',kind='count')

"""if their a wife or sibling the chance of the servival is shown"""

sns.catplot(x='Embarked',data=titanic_df,hue='Pclass',kind='count')

"""queens town - majority of the people had a sit in 3 rd class"""

titanic_df['Age'].mean()

"""data cleaning"""

titanic_df.groupby(by='Pclass')['Age'].mean()

"""pclass group by the class"""

def m_age(c):
  Age=c[0]
  Pclass=c[1]
  if pd.isnull(Age):
    if Pclass==1:
      return 38
    elif Pclass==2:
        return 29
    else:
      return 25
  else:
      return(Age)

titanic_df['Age']=titanic_df[['Age','Pclass']].apply(m_age,axis=1)

sns.heatmap(titanic_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')

titanic_df.drop('Cabin',axis=1,inplace=True)

sns.heatmap(titanic_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')

titanic_df=titanic_df.dropna()

sns.heatmap(titanic_df.isnull(),yticklabels=False,cbar=False,cmap='viridis')

sex=pd.get_dummies(titanic_df['Sex'],drop_first=True)

sex

embark=pd.get_dummies(titanic_df['Embarked'],drop_first=True)

titanic_df.drop(['Sex','Embarked','Name','Ticket'],axis=1,inplace=True)

"""in one column the data is represent

convert female and male to 0 and 1 embarked also as in numeric,drop the name ,drop the ticket
"""



embark

titanic_df.head()

titanic_df=pd.concat([titanic_df,sex,embark],axis=1)

titanic_df